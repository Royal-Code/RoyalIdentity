@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity
@using RoyalIdentity.Users

@inject ISignInManager SignInManager
@inject IdentityRedirectManager RedirectManager

@if (ExternalProviders.Count() is 0)
{
    <div>
        <p>
            There are no external authentication services configured. See this <a href="https://go.microsoft.com/fwlink/?LinkID=532715">article
            about setting up this ASP.NET application to support logging in via external services</a>.
        </p>
    </div>
}
else
{
    <form class="form-horizontal" action="Account/PerformExternalLogin" method="post">
        <div>
            <AntiforgeryToken />
            <input type="hidden" name="ReturnUrl" value="@ReturnUrl" />
            <p>
                @foreach (var provider in ExternalProviders)
                {
                    <button type="submit" class="btn btn-primary" name="provider" value="@provider.AuthenticationScheme" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                }
            </p>
        </div>
    </form>
}

@code {
    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    [Parameter, EditorRequired]
    public IEnumerable<ExternalProvider> ExternalProviders { get; set; }
}
