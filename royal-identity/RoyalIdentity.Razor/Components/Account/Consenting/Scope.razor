
@using RoyalIdentity.Extensions
@inherits Editor<ScopeConsentInputModel>

<li class="list-group-item">

    <InputText @bind-Value="Value.Scope" type="hidden" name="@($"inputModel.IdentityScopesConsent[{Index}].Scope")" />

    <label>
        <InputCheckbox @bind-Value="Value.Checked"
                       class="consent-scopecheck"
                       id="@Id"
                       readonly="@Value.Required"
                       name="@($"inputModel.IdentityScopesConsent[{Index}].Checked")" />

        <strong>@Value.DisplayName</strong>

        @if (Value.Emphasize)
        {
            <span class="icon-exclamation-sign"></span>
        }
    </label>

    @if (Value.Required)
    {
        <span><em>(required)</em></span>
    }

    @if (Value.Description.IsPresent())
    {
        <div class="consent-description">
            <label for="@Id">@Value.Description</label>
        </div>
    }
</li>

@code {

    private string Id => $"scopes_{Value.Scope}";

    [Parameter]
    public int Index { get; set; }

}