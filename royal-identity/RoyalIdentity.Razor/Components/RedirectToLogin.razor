@using Microsoft.Extensions.Options
@using RoyalIdentity.Contracts.Storage
@using RoyalIdentity.Extensions
@using RoyalIdentity.Options

@inject NavigationManager NavigationManager
@inject IStorage Storage

@code {

    [CascadingParameter]
    private HttpContext? HttpContext { get; set; }
    protected override void OnInitialized()
    {
        if (HttpContext is not null && HttpContext.TryGetCurrentRealm(out var realm))
        {
            var interaction = realm.Options.ServerOptions.UI;
            var loginUrl = realm.Routes.LoginPath;
            var url = loginUrl.AddQueryString(realm.Options.UI.LoginParameter, NavigationManager.Uri);
            NavigationManager.NavigateTo(url, forceLoad: true);
        }
        else
        {
            var interaction = Storage.ServerOptions.UI;
            NavigationManager.NavigateTo(interaction.SelectDomainPath, forceLoad: true);
        }
    }
}
